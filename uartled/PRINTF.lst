*******************************************************************************
*                                                                             *
*                 ARM C CROSS COMPILER Version 1.03.130923 Demo               *
*                      Copyright (C) 2009 Phyton, Inc.                        *
*                                                                             *
*******************************************************************************

                     ui2a??T:
;FILE: printf.c
;000040    static void ui2a(unsigned int num, unsigned int base, int uc,char * bf)
00000000    B5F0                       	PUSH            {R4-R7,R14} 
00000002    4644                       	MOV             R4,R8
00000004    464D                       	MOV             R5,R9
00000006    B430                       	PUSH            {R4,R5} 
00000008    B081                       	SUB             R13,#4
0000000A    461E                       	MOV             R6,R3
0000000C    4680                       	MOV             R8,R0
0000000E    4689                       	MOV             R9,R1
00000010    9200                       	STR             R2,[R13,#0]
;000042            int n=0;
00000012    2500                       	MOVS            n?ui2a,#0
;000043            unsigned int d=1;
00000014    2401                       	MOVS            d?ui2a,#1
;000044            while (num/d >= base)
00000016    E001                       	B               ??_1_CONTINUE
                     ??_1_DO:
;000045                    d*=base;
00000018    4649                       	MOV             R1,base?ui2a
0000001A    434C                       	MULS            d?ui2a,R1
               ??_1_CONTINUE:
0000001C    4640                       	MOV             R0,num?ui2a
0000001E    4621                       	MOV             R1,d?ui2a
00000020    FFEEF7FF                   	BLF             ??DIV32U
00000024    4548                       	CMP             R0,base?ui2a
00000026    D2F7                       	BCS             ??_1_DO
;000046            while (d!=0) {
00000028    E025                       	B               ??_2_CONTINUE
                     ??_2_DO:
;000047                    int dgt = num / d;
0000002A    4640                       	MOV             R0,num?ui2a
0000002C    4621                       	MOV             R1,d?ui2a
0000002E    FFE7F7FF                   	BLF             ??DIV32U
00000032    4607                       	MOV             dgt?ui2a?0003,R0
;000048                    num%= d;
00000034    4640                       	MOV             R0,num?ui2a
00000036    4621                       	MOV             R1,d?ui2a
00000038    FFE2F7FF                   	BLF             ??MOD32U
0000003C    4680                       	MOV             num?ui2a,R0
;000049                    d/=base;
0000003E    4620                       	MOV             R0,d?ui2a
00000040    4649                       	MOV             R1,base?ui2a
00000042    FFDDF7FF                   	BLF             ??DIV32U
00000046    4604                       	MOV             d?ui2a,R0
;000050                    if (n || dgt>0 || d==0) {
00000048    2D00                       	CMP             n?ui2a,#0
0000004A    D103                       	BNE             ??_3_IF
0000004C    2F01                       	CMP             dgt?ui2a?0003,#1
0000004E    DA01                       	BGE             ??_3_IF
00000050    2C00                       	CMP             d?ui2a,#0
00000052    D110                       	BNE             ??_3_ELSE
                     ??_3_IF:
;000051                            *bf++ = dgt+(dgt<10 ? '0' : (uc ? 'A' : 'a')-10);
00000054    2F0A                       	CMP             dgt?ui2a?0003,#10
00000056    DA01                       	BGE             ??_6_ELSE
00000058    2030                       	MOVS            R0,#48
0000005A    E008                       	B               ??_6_END
                   ??_6_ELSE:
0000005C    9A00                       	LDR             R2,[R13,#uc?ui2a]
0000005E    2A00                       	CMP             R2,#0
00000060    D001                       	BEQ             ??_7_ELSE
00000062    2041                       	MOVS            R0,#65
00000064    E000                       	B               ??_7_END
                   ??_7_ELSE:
00000066    2061                       	MOVS            R0,#97
                    ??_7_END:
00000068    2109                       	MOVS            R1,#9
0000006A    43C9                       	MVNS            R1,R1
0000006C    4408                       	ADD             R0,R1
                    ??_6_END:
0000006E    4438                       	ADD             R0,dgt?ui2a?0003
00000070    7030                       	STRB            R0,[bf?ui2a,#0]
00000072    1C76                       	ADDS            bf?ui2a,bf?ui2a,#1
;000052                            ++n;
00000074    1C6D                       	ADDS            n?ui2a,n?ui2a,#1
;000053                            }
                   ??_3_ELSE:
;000054                    }
               ??_2_CONTINUE:
00000076    2C00                       	CMP             d?ui2a,#0
00000078    D1D7                       	BNE             ??_2_DO
;000055            *bf=0;
0000007A    2000                       	MOVS            R0,#0
0000007C    7030                       	STRB            R0,[bf?ui2a,#0]
;000056            }
0000007E    B001                       	ADD             R13,#4
00000080    BC30                       	POP             {R4,R5} 
00000082    46A0                       	MOV             R8,R4
00000084    46A9                       	MOV             R9,R5
00000086    BDF0                       	POP             {R4-R7,R15} 
.ENDF
                      i2a??T:
;000058    static void i2a (int num, char * bf)
00000088    B500                       	PUSH            {R14} 
0000008A    460B                       	MOV             R3,R1
;000060            if (num<0) {
0000008C    2800                       	CMP             num?i2a,#0
0000008E    D503                       	BPL             ??_8_ELSE
;000061                    num=-num;
00000090    4240                       	RSBS            num?i2a,num?i2a
;000062                    *bf++ = '-';
00000092    222D                       	MOVS            R2,#45
00000094    701A                       	STRB            R2,[bf?i2a,#0]
00000096    1C5B                       	ADDS            bf?i2a,bf?i2a,#1
;000063                    }
                   ??_8_ELSE:
;000064            ui2a(num,10,0,bf);
00000098    210A                       	MOVS            R1,#10
0000009A    2200                       	MOVS            R2,#0
0000009C    FFB0F7FF                   	BLF             ui2a??T
;000065            }
000000A0    BD00                       	POP             {R15} 
.ENDF
                      a2d??T:
;000067    static int a2d(char ch)
;000069            if (ch>='0' && ch<='9')
000000A2    4601                       	MOV             R1,ch?a2d
000000A4    2930                       	CMP             R1,#48
000000A6    DB03                       	BLT             ??_9_ELSE
000000A8    293A                       	CMP             R1,#58
000000AA    DA01                       	BGE             ??_9_ELSE
;000070                    return ch-'0';
000000AC    3830                       	SUBS            ch?a2d,#48
000000AE    4770                       	BX              R14
                   ??_9_ELSE:
;000071            else if (ch>='a' && ch<='f')
000000B0    B241                       	SXTB            R1,ch?a2d
000000B2    2961                       	CMP             R1,#97
000000B4    DB05                       	BLT             ??_11_ELSE
000000B6    B241                       	SXTB            R1,ch?a2d
000000B8    2967                       	CMP             R1,#103
000000BA    DA02                       	BGE             ??_11_ELSE
;000072                    return ch-'a'+10;
000000BC    B240                       	SXTB            ch?a2d,ch?a2d
000000BE    3857                       	SUBS            ch?a2d,#87
000000C0    4770                       	BX              R14
                  ??_11_ELSE:
;000073            else if (ch>='A' && ch<='F')
000000C2    B241                       	SXTB            R1,ch?a2d
000000C4    2941                       	CMP             R1,#65
000000C6    DB05                       	BLT             ??_13_ELSE
000000C8    B241                       	SXTB            R1,ch?a2d
000000CA    2947                       	CMP             R1,#71
000000CC    DA02                       	BGE             ??_13_ELSE
;000074                    return ch-'A'+10;
000000CE    B240                       	SXTB            ch?a2d,ch?a2d
000000D0    3837                       	SUBS            ch?a2d,#55
000000D2    4770                       	BX              R14
                  ??_13_ELSE:
;000075            else return -1;
000000D4    2000                       	MOVS            R0,#0
000000D6    43C0                       	MVNS            R0,R0
;000076            }
000000D8    4770                       	BX              R14
.ENDF
                      a2i??T:
;000078    static char a2i(char ch, char** src,int base,int* nump)
000000DA    B5F0                       	PUSH            {R4-R7,R14} 
000000DC    4644                       	MOV             R4,R8
000000DE    B410                       	PUSH            {R4} 
000000E0    B081                       	SUB             R13,#4
000000E2    4616                       	MOV             R6,R2
000000E4    460F                       	MOV             R7,R1
000000E6    4680                       	MOV             R8,R0
000000E8    9300                       	STR             R3,[R13,#0]
;000080            char* p= *src;
000000EA    683C                       	LDR             p?a2i,[src?a2i,#0]
;000081            int num=0;
000000EC    2500                       	MOVS            num?a2i,#0
;000083            while ((digit=a2d(ch))>=0) {
000000EE    E007                       	B               ??_15_CONTINUE
                    ??_15_DO:
;000084                    if (digit>base) break;
000000F0    4286                       	CMP             base?a2i,digit?a2i
000000F2    DB0B                       	BLT             ??_15_BREAK
;000085                    num=num*base+digit;
000000F4    4375                       	MULS            num?a2i,base?a2i
000000F6    4405                       	ADD             num?a2i,digit?a2i
;000086                    ch=*p++;
000000F8    2300                       	MOVS            R3,#0
000000FA    56E0                       	LDRSB           R0,[p?a2i,R3]
000000FC    4680                       	MOV             ch?a2i,R0
000000FE    1C64                       	ADDS            p?a2i,p?a2i,#1
;000087                    }
              ??_15_CONTINUE:
00000100    4640                       	MOV             digit?a2i,ch?a2i
00000102    B240                       	SXTB            digit?a2i,digit?a2i
00000104    FFCDF7FF                   	BLF             a2d??T
00000108    2800                       	CMP             digit?a2i,#0
0000010A    D5F1                       	BPL             ??_15_DO
                 ??_15_BREAK:
;000088            *src=p;
0000010C    603C                       	STR             p?a2i,[src?a2i,#0]
;000089            *nump=num;
0000010E    9B00                       	LDR             R3,[R13,#nump?a2i]
00000110    601D                       	STR             num?a2i,[R3,#0]
;000090            return ch;
00000112    4640                       	MOV             R0,ch?a2i
00000114    B240                       	SXTB            R0,R0
;000091            }
00000116    B001                       	ADD             R13,#4
00000118    BC10                       	POP             {R4} 
0000011A    46A0                       	MOV             R8,R4
0000011C    BDF0                       	POP             {R4-R7,R15} 
.ENDF
                   putchw??T:
;000093    static void putchw(void* putp,putcf putf,int n, char z, char* bf)
0000011E    B5F0                       	PUSH            {R4-R7,R14} 
00000120    B082                       	SUB             R13,#8
00000122    4614                       	MOV             R4,R2
00000124    9E07                       	LDR             R6,[R13,#28]
00000126    460F                       	MOV             R7,R1
00000128    9000                       	STR             R0,[R13,#0]
;000095            char fc=z? '0' : ' ';
0000012A    461D                       	MOV             R5,z?putchw
0000012C    2D00                       	CMP             R5,#0
0000012E    D001                       	BEQ             ??_17_ELSE
00000130    2130                       	MOVS            R1,#48
00000132    E000                       	B               ??_17_END
                  ??_17_ELSE:
00000134    2120                       	MOVS            R1,#32
                   ??_17_END:
00000136    4668                       	MOV             R0,R13
00000138    7101                       	STRB            R1,[R0,#fc?putchw]
;000097            char* p=bf;
0000013A    4635                       	MOV             p?putchw,bf?putchw
;000098            while (*p++ && n > 0)
0000013C    E000                       	B               ??_18_CONTINUE
                    ??_18_DO:
;000099                    n--;
0000013E    1E64                       	SUBS            n?putchw,n?putchw,#1
              ??_18_CONTINUE:
00000140    4629                       	MOV             R1,p?putchw
00000142    1C6D                       	ADDS            p?putchw,p?putchw,#1
00000144    2200                       	MOVS            R2,#0
00000146    5689                       	LDRSB           R1,[R1,R2]
00000148    2900                       	CMP             R1,#0
0000014A    D007                       	BEQ             ??_20_CONTINUE
0000014C    2C01                       	CMP             n?putchw,#1
0000014E    DAF6                       	BGE             ??_18_DO
;000100            while (n-- > 0)
00000150    E004                       	B               ??_20_CONTINUE
                    ??_20_DO:
;000101                    putf(putp,fc);
00000152    A901                       	ADD             R1,R13,#fc?putchw
00000154    2000                       	MOVS            R0,#0
00000156    5609                       	LDRSB           R1,[R1,R0]
00000158    9800                       	LDR             R0,[R13,#putp?putchw]
0000015A    47B8                       	BLX             putf?putchw
              ??_20_CONTINUE:
0000015C    4625                       	MOV             R5,n?putchw
0000015E    1E64                       	SUBS            n?putchw,n?putchw,#1
00000160    2D01                       	CMP             R5,#1
00000162    DAF6                       	BGE             ??_20_DO
;000102            while ((ch= *bf++))
00000164    E002                       	B               ??_21_CONTINUE
                    ??_21_DO:
;000103                    putf(putp,ch);
00000166    B249                       	SXTB            ch?putchw,ch?putchw
00000168    9800                       	LDR             R0,[R13,#putp?putchw]
0000016A    47B8                       	BLX             putf?putchw
              ??_21_CONTINUE:
0000016C    4634                       	MOV             R4,bf?putchw
0000016E    1C76                       	ADDS            bf?putchw,bf?putchw,#1
00000170    2500                       	MOVS            R5,#0
00000172    5761                       	LDRSB           ch?putchw,[R4,R5]
00000174    460C                       	MOV             R4,ch?putchw
00000176    2C00                       	CMP             R4,#0
00000178    D1F5                       	BNE             ??_21_DO
;000104            }
0000017A    B002                       	ADD             R13,#8
0000017C    BDF0                       	POP             {R4-R7,R15} 
.ENDF
               tfp_format??T:
;000106    void tfp_format(void* putp,putcf putf,char *fmt, va_list va)
0000017E    B5F0                       	PUSH            {R4-R7,R14} 
00000180    B085                       	SUB             R13,#20
00000182    461C                       	MOV             R4,R3
00000184    460D                       	MOV             R5,R1
00000186    4607                       	MOV             R7,R0
00000188    9200                       	STR             R2,[R13,#0]
;000113            while ((ch=*(fmt++))) {
0000018A    E082                       	B               ??_22_CONTINUE
                    ??_22_DO:
;000114                    if (ch!='%')
0000018C    B242                       	SXTB            R2,ch?tfp_format
0000018E    2A25                       	CMP             R2,#37
00000190    D003                       	BEQ             ??_23_ELSE
;000115                            putf(putp,ch);
00000192    B241                       	SXTB            R1,ch?tfp_format
00000194    4638                       	MOV             ch?tfp_format,putp?tfp_format
00000196    47A8                       	BLX             putf?tfp_format
00000198    E07B                       	B               ??_23_END
                  ??_23_ELSE:
;000116                    else {
;000117                            char lz=0;
0000019A    2600                       	MOVS            lz?tfp_format?0013,#0
;000121                            int w=0;
0000019C    2100                       	MOVS            R1,#0
0000019E    9101                       	STR             R1,[R13,#w?tfp_format?0013]
;000122                            ch=*(fmt++);
000001A0    9A00                       	LDR             R2,[R13,#fmt?tfp_format]
000001A2    5650                       	LDRSB           ch?tfp_format,[R2,R1]
000001A4    1C52                       	ADDS            R2,R2,#1
000001A6    9200                       	STR             R2,[R13,#fmt?tfp_format]
;000123                            if (ch=='0') {
000001A8    4602                       	MOV             R2,ch?tfp_format
000001AA    2A30                       	CMP             R2,#48
000001AC    D104                       	BNE             ??_24_ELSE
;000124                                    ch=*(fmt++);
000001AE    9A00                       	LDR             R2,[R13,#fmt?tfp_format]
000001B0    5790                       	LDRSB           ch?tfp_format,[R2,R6]
000001B2    1C52                       	ADDS            R2,R2,#1
000001B4    9200                       	STR             R2,[R13,#fmt?tfp_format]
;000125                                    lz=1;
000001B6    2601                       	MOVS            lz?tfp_format?0013,#1
;000126                                    }
                  ??_24_ELSE:
;000127                            if (ch>='0' && ch<='9') {
000001B8    B242                       	SXTB            R2,ch?tfp_format
000001BA    2A30                       	CMP             R2,#48
000001BC    DB08                       	BLT             ??_25_ELSE
000001BE    B242                       	SXTB            R2,ch?tfp_format
000001C0    2A3A                       	CMP             R2,#58
000001C2    DA05                       	BGE             ??_25_ELSE
;000128                                    ch=a2i(ch,&fmt,10,&w);
000001C4    B240                       	SXTB            ch?tfp_format,ch?tfp_format
000001C6    A900                       	ADD             R1,R13,#fmt?tfp_format
000001C8    220A                       	MOVS            R2,#10
000001CA    AB01                       	ADD             R3,R13,#w?tfp_format?0013
000001CC    FF85F7FF                   	BLF             a2i??T
;000129                                    }
                  ??_25_ELSE:
;000136                            switch (ch) {
000001D0    B242                       	SXTB            R2,ch?tfp_format
000001D2    2A25                       	CMP             R2,#37
000001D4    D05A                       	BEQ             ??_27_CASE_25
000001D6    2A58                       	CMP             R2,#88
000001D8    D02E                       	BEQ             ??_27_CASE_58
000001DA    2A63                       	CMP             R2,#99
000001DC    D043                       	BEQ             ??_27_CASE_63
000001DE    2A64                       	CMP             R2,#100
000001E0    D01A                       	BEQ             ??_27_CASE_64
000001E2    2A73                       	CMP             R2,#115
000001E4    D046                       	BEQ             ??_27_CASE_73
000001E6    2A75                       	CMP             R2,#117
000001E8    D004                       	BEQ             ??_27_CASE_75
000001EA    2A78                       	CMP             R2,#120
000001EC    D024                       	BEQ             ??_27_CASE_78
000001EE    2A00                       	CMP             R2,#0
000001F0    D14F                       	BNE             ??_27_DEFAULT
;000138                                            goto abort;
000001F2    E058                       	B               ??_abort_tfp_format
               ??_27_CASE_75:
;000139                                    case 'u' : {
;000145                                            ui2a(va_arg(va, unsigned int),10,0,bf);
000001F4    1D24                       	ADDS            va?tfp_format,va?tfp_format,#4
000001F6    1F22                       	SUBS            R2,va?tfp_format,#4
000001F8    6810                       	LDR             R0,[R2,#0]
000001FA    210A                       	MOVS            R1,#10
000001FC    2200                       	MOVS            R2,#0
000001FE    AB02                       	ADD             R3,R13,#bf?tfp_format
00000200    FEFEF7FF                   	BLF             ui2a??T
;000146                                            putchw(putp,putf,w,lz,bf);
00000204    AA02                       	ADD             R2,R13,#bf?tfp_format
00000206    B404                       	PUSH            {R2} 
00000208    4633                       	MOV             R3,lz?tfp_format?0013
0000020A    4638                       	MOV             R0,putp?tfp_format
0000020C    4629                       	MOV             R1,putf?tfp_format
0000020E    9A02                       	LDR             R2,[R13,#bf?tfp_format]
00000210    FF85F7FF                   	BLF             putchw??T
00000214    B001                       	ADD             R13,#4
;000147                                            break;
00000216    E03C                       	B               ??_27_BREAK
;000148                                            }
               ??_27_CASE_64:
;000149                                    case 'd' :  {
;000155                                            i2a(va_arg(va, int),bf);
00000218    1D24                       	ADDS            va?tfp_format,va?tfp_format,#4
0000021A    1F22                       	SUBS            R2,va?tfp_format,#4
0000021C    6810                       	LDR             R0,[R2,#0]
0000021E    A902                       	ADD             R1,R13,#bf?tfp_format
00000220    FF32F7FF                   	BLF             i2a??T
;000156                                            putchw(putp,putf,w,lz,bf);
00000224    AA02                       	ADD             R2,R13,#bf?tfp_format
00000226    B404                       	PUSH            {R2} 
00000228    4633                       	MOV             R3,lz?tfp_format?0013
0000022A    4638                       	MOV             R0,putp?tfp_format
0000022C    4629                       	MOV             R1,putf?tfp_format
0000022E    9A02                       	LDR             R2,[R13,#bf?tfp_format]
00000230    FF75F7FF                   	BLF             putchw??T
00000234    B001                       	ADD             R13,#4
;000157                                            break;
00000236    E02C                       	B               ??_27_BREAK
;000158                                            }
               ??_27_CASE_78:
               ??_27_CASE_58:
;000165                                            ui2a(va_arg(va, unsigned int),16,(ch=='X'),bf);
00000238    B242                       	SXTB            R2,ch?tfp_format
0000023A    2A58                       	CMP             R2,#88
0000023C    1D24                       	ADDS            va?tfp_format,va?tfp_format,#4
0000023E    1F22                       	SUBS            R2,va?tfp_format,#4
00000240    6810                       	LDR             ch?tfp_format,[R2,#0]
00000242    2110                       	MOVS            R1,#16
00000244    D101                       	BNE             ??_28_NOT
00000246    2201                       	MOVS            R2,#1
00000248    E000                       	B               ??_28_SKIP
                   ??_28_NOT:
0000024A    2200                       	MOVS            R2,#0
                  ??_28_SKIP:
0000024C    AB02                       	ADD             R3,R13,#bf?tfp_format
0000024E    FED7F7FF                   	BLF             ui2a??T
;000166                                            putchw(putp,putf,w,lz,bf);
00000252    AA02                       	ADD             R2,R13,#bf?tfp_format
00000254    B404                       	PUSH            {R2} 
00000256    4633                       	MOV             R3,lz?tfp_format?0013
00000258    4638                       	MOV             R0,putp?tfp_format
0000025A    4629                       	MOV             R1,putf?tfp_format
0000025C    9A02                       	LDR             R2,[R13,#bf?tfp_format]
0000025E    FF5EF7FF                   	BLF             putchw??T
00000262    B001                       	ADD             R13,#4
;000167                                            break;
00000264    E015                       	B               ??_27_BREAK
               ??_27_CASE_63:
;000169                                            putf(putp,(char)(va_arg(va, int)));
00000266    1D24                       	ADDS            va?tfp_format,va?tfp_format,#4
00000268    1F22                       	SUBS            R2,va?tfp_format,#4
0000026A    2600                       	MOVS            R6,#0
0000026C    5791                       	LDRSB           R1,[R2,R6]
0000026E    4638                       	MOV             R0,putp?tfp_format
00000270    47A8                       	BLX             putf?tfp_format
;000170                                            break;
00000272    E00E                       	B               ??_27_BREAK
               ??_27_CASE_73:
;000172                                            putchw(putp,putf,w,0,va_arg(va, char*));
00000274    1D24                       	ADDS            va?tfp_format,va?tfp_format,#4
00000276    1F22                       	SUBS            R2,va?tfp_format,#4
00000278    6812                       	LDR             R2,[R2,#0]
0000027A    B404                       	PUSH            {R2} 
0000027C    4638                       	MOV             R0,putp?tfp_format
0000027E    4629                       	MOV             R1,putf?tfp_format
00000280    9A02                       	LDR             R2,[R13,#8]
00000282    2300                       	MOVS            R3,#0
00000284    FF4BF7FF                   	BLF             putchw??T
00000288    B001                       	ADD             R13,#4
;000173                                            break;
0000028A    E002                       	B               ??_27_BREAK
               ??_27_CASE_25:
;000175                                            putf(putp,ch);
0000028C    B241                       	SXTB            R1,ch?tfp_format
0000028E    4638                       	MOV             ch?tfp_format,putp?tfp_format
00000290    47A8                       	BLX             putf?tfp_format
               ??_27_DEFAULT:
;000177                                            break;
;000178                                    }
                 ??_27_BREAK:
;000179                            }
                   ??_23_END:
;000180                    }
              ??_22_CONTINUE:
00000292    9E00                       	LDR             R6,[R13,#fmt?tfp_format]
00000294    9A00                       	LDR             R2,[R13,#fmt?tfp_format]
00000296    1C52                       	ADDS            R2,R2,#1
00000298    9200                       	STR             R2,[R13,#fmt?tfp_format]
0000029A    2100                       	MOVS            R1,#0
0000029C    5670                       	LDRSB           ch?tfp_format,[R6,R1]
0000029E    4602                       	MOV             R2,ch?tfp_format
000002A0    2A00                       	CMP             R2,#0
000002A2    D000                       	BEQ             ??_22_DO_BYPASS_2A2
000002A4    E772                       	B               ??_22_DO
         ??_22_DO_BYPASS_2A2:
         ??_abort_tfp_format:
;000182            }
000002A6    B005                       	ADD             R13,#20
000002A8    BDF0                       	POP             {R4-R7,R15} 
.ENDF
              init_printf??T:
;000185    void init_printf(void* putp,void (*putf) (void*,char))
;000187            stdout_putf=putf;
000002AA    4A02                       	LDR             R2,?lr0000	; stdout_putf
000002AC    6011                       	STR             putf?init_printf,[R2,#0]
;000188            stdout_putp=putp;
000002AE    4902                       	LDR             R1,?lr0001	; stdout_putp
000002B0    6008                       	STR             putp?init_printf,[R1,#0]
;000189            }
000002B2    4770                       	BX              R14

000002B4    00000000	?lr0000	.DCD	stdout_putf	; used 1 time(s)
000002B8    00000004	?lr0001	.DCD	stdout_putp	; used 1 time(s)

.ENDF
               tfp_printf??T:
;000191    void tfp_printf(char *fmt, ...)
000002BC    B40F                       	PUSH            {R0-R3} 
000002BE    B510                       	PUSH            {R4,R14} 
;000194            va_start(va,fmt);
000002C0    AB03                       	ADD             va?tfp_printf,R13,#12
;000195            tfp_format(stdout_putp,stdout_putf,fmt,va);
000002C2    4804                       	LDR             R0,?lr0002	; stdout_putf
000002C4    6801                       	LDR             R1,[R0,#0]
000002C6    4804                       	LDR             R0,?lr0003	; stdout_putp
000002C8    6800                       	LDR             R0,[R0,#0]
000002CA    9A02                       	LDR             R2,[R13,#fmt?tfp_printf]
000002CC    FF57F7FF                   	BLF             tfp_format??T
;000197            }
000002D0    BD10                       	POP             {R4,R15} 

.ALIGN	2
000002D4    00000000	?lr0002	.DCD	stdout_putf	; used 1 time(s)
000002D8    00000004	?lr0003	.DCD	stdout_putp	; used 1 time(s)

.ENDF
                    putcp??T:
;000199    static void putcp(void* p,char c)
;000201            *(*((char**)p))++ = c;
000002DC    6802                       	LDR             R2,[p?putcp,#0]
000002DE    6803                       	LDR             R3,[p?putcp,#0]
000002E0    1C5B                       	ADDS            R3,R3,#1
000002E2    6003                       	STR             R3,[p?putcp,#0]
000002E4    7011                       	STRB            c?putcp,[R2,#0]
;000202            }
000002E6    4770                       	BX              R14
.ENDF
              tfp_sprintf??T:
;000206    void tfp_sprintf(char* s,char *fmt, ...)
000002E8    B40E                       	PUSH            {R1-R3} 
000002EA    B510                       	PUSH            {R4,R14} 
000002EC    B081                       	SUB             R13,#4
000002EE    9000                       	STR             R0,[R13,#0]
;000209            va_start(va,fmt);
000002F0    AB04                       	ADD             va?tfp_sprintf,R13,#16
;000210            tfp_format(&s,putcp,fmt,va);
000002F2    A800                       	ADD             R0,R13,#s?tfp_sprintf
000002F4    4904                       	LDR             R1,?lr0004	; putcp
000002F6    9A03                       	LDR             R2,[R13,#fmt?tfp_sprintf]
000002F8    FF41F7FF                   	BLF             tfp_format??T
;000211            putcp(&s,0);
000002FC    A800                       	ADD             R0,R13,#s?tfp_sprintf
000002FE    2100                       	MOVS            R1,#0
00000300    FFECF7FF                   	BLF             putcp??T
;000213            }
00000304    B001                       	ADD             R13,#4
00000306    BD10                       	POP             {R4,R15} 

00000308    000002DD	?lr0004	.DCD	putcp	; used 1 time(s)

.ENDF

printf.c: 780 byte(s), 300 line(s), 0 error(s), 0 warning(s)

