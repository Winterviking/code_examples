*******************************************************************************
*                                                                             *
*                 ARM C CROSS COMPILER Version 1.03.130923 Demo               *
*                      Copyright (C) 2009 Phyton, Inc.                        *
*                                                                             *
*******************************************************************************

            initEvalboard??T:
;FILE: evalboard.c
;000008    void initEvalboard(){
00000000    B500                       	PUSH            {R14} 
;000010            initClockEvalboard();
00000002    F80DF000                   	BLF             initClockEvalboard??T
;000011            initPortEvalboard();
00000006    F807F000                   	BLF             initPortEvalboard??T
;000014            initUART(MDR_UART1);
0000000A    4802                       	LDR             R0,?lr0000	; 40030000h
0000000C    FFF8F7FF                   	BLF             initUART
;000016    }
00000010    BD00                       	POP             {R15} 

.ALIGN	2
00000014    40030000	?lr0000	.DCD	40030000h	; used 1 time(s)

.ENDF
        initPortEvalboard??T:
;000021    void initPortEvalboard(){
00000018    B500                       	PUSH            {R14} 
;000022            assemblePorts();
0000001A    FFF1F7FF                   	BLF             assemblePorts
;000023    }
0000001E    BD00                       	POP             {R15} 
.ENDF
       initClockEvalboard??T:
;000025    void initClockEvalboard(){
00000020    B500                       	PUSH            {R14} 
;000029       MDR_RST_CLK->HS_CONTROL = RST_CLK_HSE_ON; // ok 0x01
00000022    2101                       	MOVS            R1,#1
00000024    4825                       	LDR             R0,?lr0001	; 40020008h
00000026    6001                       	STR             R1,[R0,#0]
;000035       MDR_RST_CLK->CPU_CLOCK = RST_CLK_CPU_PLLsrcHSEdiv1                                           |
;000036                                RST_CLK_CPU_C2_SRC_CPU_C1                                           |
;000037                                RST_CLK_CPUclkCPU_C3                                                |
;000038                                SETBITS(RST_CLK_CPUclkDIV1, RST_CLK_CPU_CLOCK_CPU_C3_SEL_Pos); // ok 0x0102
00000028    4925                       	LDR             R1,?lr0002	; 102h
0000002A    4826                       	LDR             R0,?lr0003	; 4002000Ch
0000002C    6001                       	STR             R1,[R0,#0]
;000041       MDR_RST_CLK->PLL_CONTROL = RST_CLK_PLL_CONTROL_PLL_CPU_ON                                    |
;000042                                  SETBITS(PLL_MUL_LABEL, RST_CLK_PLL_CONTROL_PLL_CPU_MUL_Pos); // ok 0x0504
0000002E    4926                       	LDR             R1,?lr0004	; 504h
00000030    4826                       	LDR             R0,?lr0005	; 40020004h
00000032    6001                       	STR             R1,[R0,#0]
;000045       MDR_RST_CLK->PLL_CONTROL |= RST_CLK_PLL_CONTROL_PLL_CPU_PLD;
00000034    6800                       	LDR             R0,[R0,#0]
00000036    2108                       	MOVS            R1,#8
00000038    4308                       	ORRS            R0,R1
0000003A    4924                       	LDR             R1,?lr0005	; 40020004h
0000003C    6008                       	STR             R0,[R1,#0]
;000046       MDR_RST_CLK->PLL_CONTROL &= ~RST_CLK_PLL_CONTROL_PLL_CPU_PLD;
0000003E    4823                       	LDR             R0,?lr0005	; 40020004h
00000040    6800                       	LDR             R0,[R0,#0]
00000042    2108                       	MOVS            R1,#8
00000044    43C9                       	MVNS            R1,R1
00000046    4008                       	ANDS            R0,R1
00000048    4920                       	LDR             R1,?lr0005	; 40020004h
0000004A    6008                       	STR             R0,[R1,#0]
;000049       DELAY_MKS(40);// wtf )
0000004C    4820                       	LDR             R0,?lr0006	; HCLK
0000004E    6800                       	LDR             R0,[R0,#0]
00000050    4920                       	LDR             R1,?lr0007	; 135C0E0h
00000052    FFD5F7FF                   	BLF             ??DIV32U
00000056    2128                       	MOVS            R1,#40
00000058    4348                       	MULS            R0,R1
0000005A    491F                       	LDR             R1,?lr0008	; maxpause_mks
0000005C    6008                       	STR             R0,[R1,#0]
0000005E    2100                       	MOVS            R1,#0
00000060    481E                       	LDR             R0,?lr0009	; ipause
00000062    6001                       	STR             R1,[R0,#0]
00000064    E004                       	B               ??_1_CHECK
                   ??_1_LOOP:
00000066    481D                       	LDR             R0,?lr0009	; ipause
00000068    6800                       	LDR             R0,[R0,#0]
0000006A    1C40                       	ADDS            R0,R0,#1
0000006C    491B                       	LDR             R1,?lr0009	; ipause
0000006E    6008                       	STR             R0,[R1,#0]
                  ??_1_CHECK:
00000070    481A                       	LDR             R0,?lr0009	; ipause
00000072    6801                       	LDR             R1,[R0,#0]
00000074    4818                       	LDR             R0,?lr0008	; maxpause_mks
00000076    6800                       	LDR             R0,[R0,#0]
00000078    4281                       	CMP             R1,R0
0000007A    D3F4                       	BCC             ??_1_LOOP
;000050       while ((MDR_RST_CLK->CLOCK_STATUS&RST_CLK_CLOCK_STATUS_PLL_CPU_RDY)==0);
                     ??_2_DO:
0000007C    4818                       	LDR             R0,?lr0010	; 40020000h
0000007E    6800                       	LDR             R0,[R0,#0]
00000080    2102                       	MOVS            R1,#2
00000082    4008                       	ANDS            R0,R1
00000084    D0FA                       	BEQ             ??_2_DO
;000054       MDR_RST_CLK->PER_CLOCK|=RST_CLK_PCLK_EEPROM; // EEPROM_CTRL Clock enable
00000086    4817                       	LDR             R0,?lr0011	; 4002001Ch
00000088    6800                       	LDR             R0,[R0,#0]
0000008A    2108                       	MOVS            R1,#8
0000008C    4308                       	ORRS            R0,R1
0000008E    4915                       	LDR             R1,?lr0011	; 4002001Ch
00000090    6008                       	STR             R0,[R1,#0]
;000057       MDR_EEPROM->CMD = EEPROM_Latency_0;
00000092    2100                       	MOVS            R1,#0
00000094    4814                       	LDR             R0,?lr0012	; 40018000h
00000096    6001                       	STR             R1,[R0,#0]
;000070       MDR_RST_CLK->PER_CLOCK&=(~RST_CLK_PCLK_EEPROM);  // EEPROM_CTRL Clock disable
00000098    4812                       	LDR             R0,?lr0011	; 4002001Ch
0000009A    6800                       	LDR             R0,[R0,#0]
0000009C    2108                       	MOVS            R1,#8
0000009E    43C9                       	MVNS            R1,R1
000000A0    4008                       	ANDS            R0,R1
000000A2    4910                       	LDR             R1,?lr0011	; 4002001Ch
000000A4    6008                       	STR             R0,[R1,#0]
;000073       MDR_RST_CLK->CPU_CLOCK = RST_CLK_CPU_PLLsrcHSEdiv1                                           | // pll source
;000074                                RST_CLK_CPU_C2_SRC_CPU_PLL0                                         |
;000075                                RST_CLK_CPUclkCPU_C3                                                |
;000076                                SETBITS(RST_CLK_CPUclkDIV1, RST_CLK_CPU_CLOCK_CPU_C3_SEL_Pos); // ok 0x0106
000000A6    4911                       	LDR             R1,?lr0013	; 106h
000000A8    4806                       	LDR             R0,?lr0003	; 4002000Ch
000000AA    6001                       	STR             R1,[R0,#0]
;000079       MDR_RST_CLK->PER_CLOCK = //RST_CLK_PCLK_CAN1                 |
;000080                                //RST_CLK_PCLK_CAN2                 |
;000081                                //RST_CLK_PCLK_USB                  |
;000082                                RST_CLK_PCLK_EEPROM                 |
;000083                                RST_CLK_PCLK_RST_CLK                |
;000084                                //RST_CLK_PCLK_DMA                    |
;000085                                RST_CLK_PCLK_UART1                  |
;000086                                //RST_CLK_PCLK_UART2                |
;000087                                //RST_CLK_PCLK_SSP1                 |
;000088                                //RST_CLK_PCLK_MIL_STD_15531          |
;000089                                //RST_CLK_PCLK_MIL_STD_15532          |
;000090                                //RST_CLK_PCLK_POWER                  |
;000091                                //RST_CLK_PCLK_WWDG                   |
;000092                                //RST_CLK_PCLK_IWDG                   |
;000093                                RST_CLK_PCLK_TIMER1                 |
;000094                                RST_CLK_PCLK_TIMER2                 |
;000095                                //RST_CLK_PCLK_TIMER3                 |
;000096                                //RST_CLK_PCLK_ADC                  |
;000097                                //RST_CLK_PCLK_DAC                  |
;000098                                RST_CLK_PCLK_TIMER4                 |
;000099                                //RST_CLK_PCLK_SSP2                 |
;000100                                //RST_CLK_PCLK_PORTA                  |
;000101                                //RST_CLK_PCLK_PORTB                  |
;000102                                RST_CLK_PCLK_PORTC                  |
;000103                                RST_CLK_PCLK_PORTD                  |
;000104                                RST_CLK_PCLK_PORTE                  |
;000105                                //RST_CLK_PCLK_ARINC429R            |
;000106                                //RST_CLK_PCLK_BKP                    |
;000107                                //RST_CLK_PCLK_ARINC429T            |
;000108                                RST_CLK_PCLK_PORTF                  //|
;000109                                //RST_CLK_PCLK_EBC                    |
;000110                                //RST_CLK_PCLK_SSP3
;000111                                ;
000000AC    4910                       	LDR             R1,?lr0014	; 2388C058h
000000AE    480D                       	LDR             R0,?lr0011	; 4002001Ch
000000B0    6001                       	STR             R1,[R0,#0]
;000117            MDR_RST_CLK->UART_CLOCK =       SETBITS(UART_HCLKdiv2,RST_CLK_UART_CLOCK_UART1_BRG_Pos) |
;000118                                            SETBITS(ENABLE,RST_CLK_UART_CLOCK_UART1_CLK_EN_Pos);
000000B2    4910                       	LDR             R1,?lr0015	; 1000001h
000000B4    4810                       	LDR             R0,?lr0016	; 40020028h
000000B6    6001                       	STR             R1,[R0,#0]
;000120    }
000000B8    BD00                       	POP             {R15} 

.ALIGN	2
000000BC    40020008	?lr0001	.DCD	40020008h	; used 1 time(s)
000000C0    00000102	?lr0002	.DCD	102h	; used 1 time(s)
000000C4    4002000C	?lr0003	.DCD	4002000Ch	; used 2 time(s)
000000C8    00000504	?lr0004	.DCD	504h	; used 1 time(s)
000000CC    40020004	?lr0005	.DCD	40020004h	; used 4 time(s)
000000D0    00000000	?lr0006	.DCD	HCLK	; used 1 time(s)
000000D4    0135C0E0	?lr0007	.DCD	135C0E0h	; used 1 time(s)
000000D8    00000000	?lr0008	.DCD	maxpause_mks	; used 2 time(s)
000000DC    00000000	?lr0009	.DCD	ipause	; used 4 time(s)
000000E0    40020000	?lr0010	.DCD	40020000h	; used 1 time(s)
000000E4    4002001C	?lr0011	.DCD	4002001Ch	; used 5 time(s)
000000E8    40018000	?lr0012	.DCD	40018000h	; used 1 time(s)
000000EC    00000106	?lr0013	.DCD	106h	; used 1 time(s)
000000F0    2388C058	?lr0014	.DCD	2388C058h	; used 1 time(s)
000000F4    01000001	?lr0015	.DCD	1000001h	; used 1 time(s)
000000F8    40020028	?lr0016	.DCD	40020028h	; used 1 time(s)

.ENDF

evalboard.c: 252 byte(s), 44134 line(s), 0 error(s), 0 warning(s)

