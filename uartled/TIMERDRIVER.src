;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                           ;;
;;                ARM C CROSS COMPILER Version 1.03.130923 Demo              ;;
;;                     Copyright (C) 2009 Phyton, Inc.                       ;;
;;                                                                           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                           ;;
;; ASSEMBLY SOURCE FILE FOR: timerDriver.c                                   ;;
;; TARGET: Cortex-M0/M1                                                      ;;
;; OPTIMIZATION LEVEL: 0                                                     ;;
;; FULL COMMAND LINE:                                                        ;;
;;  -CM1 -t -s -l -d -p -g -Op -E10 -W50 -Z0 -Q43 -IC:\Program Files (x86)\P ;;
;;  hyton CodeMaster-ARM Demo\2_40_00\CMC-ARM\Inc;C:\Users\ivanov-ga\Desktop ;;
;;  \uartled\INCLUDE                                                         ;;
;;                                                                           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	.PMODULE TIMERDRIVER

.RSEG	UDATA__TIMERDRIVER,data
.ALIGN 2

M128Mark	.DSI
.PUBLIC	M128Mark

TC_Timer1	.DSI
.PUBLIC	TC_Timer1

TC_Timer2	.DSI
.PUBLIC	TC_Timer2

TC_Timer3	.DSI
.PUBLIC	TC_Timer3

TC_Timer4	.DSI
.PUBLIC	TC_Timer4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.RSEG	FUN_CODE__TIMERDRIVER,code

.THUMB
.FUNC	NVIC_EnableIRQ??T	.VOID (.NOCHECK)
NVIC_EnableIRQ	.EQU	NVIC_EnableIRQ??T+1
.FUNCTYPE	.VOID NVIC_EnableIRQ(.NOCHECK)
;FILE: C:\Users\ivanov-ga\Desktop\uartled\INCLUDE\core_cm1.h
;001028    static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)

IRQn?NVIC_EnableIRQ	.EQU	R0

;001030      NVIC->ISER = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
	MOVS            R1,#31
	ANDS            IRQn?NVIC_EnableIRQ,R1
	MOVS            R1,#1
	LSLS            R1,IRQn?NVIC_EnableIRQ
	LDR             IRQn?NVIC_EnableIRQ,?lr0000	; 0E000E100h
	STR             R1,[IRQn?NVIC_EnableIRQ,#0]
;001031    }
	BX              R14

.ALIGN	2
?lr0000	.DCD	0E000E100h	; used 1 time(s)

.ENDF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.PUBLIC	Timer1Select, Timer1Select??T
.FUNC	Timer1Select??T	.VOID (.NOCHECK)
Timer1Select	.EQU	Timer1Select??T+1
.FUNCTYPE	.VOID Timer1Select(.NOCHECK)
;FILE: timerDriver.c
;000068    void Timer1Select(E_PWM_LOAD_MODE Select)

Select?Timer1Select	.EQU	R0

;000070       switch (Select) {
	CMP             Select?Timer1Select,#1
	BEQ             ??_1_CASE_1
	CMP             Select?Timer1Select,#2
	BEQ             ??_1_CASE_2
	CMP             Select?Timer1Select,#0
	BNE             ??_1_BREAK
;000071          case EPLM_SWITCH_OFF: {
;000074             MDR_TIMER1->CH3_CNTRL1 = 0x0001;
	MOVS            R1,#1
	LDR             R0,?lr0001	; 40070038h
	STR             R1,[R0,#0]
;000075             MDR_TIMER1->CH4_CNTRL1 = 0x0001;
	LDR             R0,?lr0002	; 4007003Ch
	STR             R1,[R0,#0]
;000076             break;
	BX              R14
;000077          }
??_1_CASE_1:
;000079          case EPLM_WIRE_INTEGRITY_CHECK: {
;000082             MDR_TIMER1->CH3_CNTRL1 = 0x0005;
	MOVS            R1,#5
	LDR             R0,?lr0001	; 40070038h
	STR             R1,[R0,#0]
;000083             MDR_TIMER1->CH4_CNTRL1 = 0x0005;
	LDR             R0,?lr0002	; 4007003Ch
	STR             R1,[R0,#0]
;000084             break;
	BX              R14
;000085          }
??_1_CASE_2:
;000087          case EPLM_NORMAL_OPERATION: {
;000090             MDR_TIMER1->CH3_CNTRL1 = 0x0009;
	MOVS            R1,#9
	LDR             R0,?lr0001	; 40070038h
	STR             R1,[R0,#0]
;000091             MDR_TIMER1->CH4_CNTRL1 = 0x0009;
	LDR             R0,?lr0002	; 4007003Ch
	STR             R1,[R0,#0]
;000092             break;
;000093          }
;000094       }
??_1_BREAK:
;000095    }
	BX              R14

?lr0001	.DCD	40070038h	; used 3 time(s)
?lr0002	.DCD	4007003Ch	; used 3 time(s)

.ENDF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.PUBLIC	Timer1Start, Timer1Start??T
.FUNC	Timer1Start??T	.VOID (.VOID)
Timer1Start	.EQU	Timer1Start??T+1
.FUNCTYPE	.VOID Timer1Start(.VOID)
;000101    void Timer1Start(void)
	PUSH            {R14} 
;000104        MDR_TIMER1->CNTRL = 0x00000000;  // 1) Остановить таймер
	MOVS            R1,#0
	LDR             R0,?lr0003	; 4007000Ch
	STR             R1,[R0,#0]
;000105        MDR_TIMER1->STATUS = 0x00000000; // 2) запомненные события таймера
	LDR             R0,?lr0004	; 40070054h
	STR             R1,[R0,#0]
;000108        MDR_TIMER1->PSG = 0x002F;        // 3) коэффициент деления 48 для получения тактовой частоты основного счётчика таймера 1 МГц
	MOVS            R1,#47
	LDR             R0,?lr0005	; 40070004h
	STR             R1,[R0,#0]
;000109        MDR_TIMER1->CNT = 0x00000001;    // 4) Начальное значение счетчика
	MOVS            R1,#1
	LDR             R0,?lr0006	; 40070000h
	STR             R1,[R0,#0]
;000110        MDR_TIMER1->ARR = 0xFFFFFFFF;    // 5) Основание счета (максимальный период)
	MOVS            R1,#0
	MVNS            R1,R1
	LDR             R0,?lr0007	; 40070008h
	STR             R1,[R0,#0]
;000113        MDR_TIMER1->CCR2 =  0x00000000;
	MOVS            R1,#0
	LDR             R0,?lr0008	; 40070014h
	STR             R1,[R0,#0]
;000114        MDR_TIMER1->CCR3 =  0x00000000;
	LDR             R0,?lr0009	; 40070018h
	STR             R1,[R0,#0]
;000115        MDR_TIMER1->CCR31 = 0x00000000;
	LDR             R0,?lr0010	; 40070078h
	STR             R1,[R0,#0]
;000116        MDR_TIMER1->CCR4  = 0x00000000;
	LDR             R0,?lr0011	; 4007001Ch
	STR             R1,[R0,#0]
;000117        MDR_TIMER1->CCR41 = 0x00000000;
	LDR             R0,?lr0012	; 4007007Ch
	STR             R1,[R0,#0]
;000119        MDR_TIMER1->CH1_CNTRL = 0x8000;  // 7) включение канала 1 Таймера 1 в режиме захвата
	LDR             R1,?lr0013	; 8000h
	LDR             R0,?lr0014	; 40070020h
	STR             R1,[R0,#0]
;000120        MDR_TIMER1->CH1_CNTRL1 = 0x0000; // 8) запрет выдачи ШИМ-сигналов на выводы канала 1 таймера
	MOVS            R1,#0
	LDR             R0,?lr0015	; 40070030h
	STR             R1,[R0,#0]
;000121        MDR_TIMER1->CH1_CNTRL2 = 0x0;    // 9) запрет использования CCR1
	LDR             R0,?lr0016	; 40070060h
	STR             R1,[R0,#0]
;000123        MDR_TIMER1->CH2_CNTRL = 0x0200;  // 10) включение канала 2 Таймера 1 в режиме ШИМ, REF=1 при CNT=CCR
	LDR             R1,?lr0017	; 200h
	LDR             R0,?lr0018	; 40070024h
	STR             R1,[R0,#0]
;000124        MDR_TIMER1->CH2_CNTRL1 = 0x0000; // 11) запрет выдачи ШИМ-сигналов на выводы канала 2 таймера
	MOVS            R1,#0
	LDR             R0,?lr0019	; 40070034h
	STR             R1,[R0,#0]
;000125        MDR_TIMER1->CH2_CNTRL2 = 0x0;    // 12) запрет использования CCR1
	LDR             R0,?lr0020	; 40070064h
	STR             R1,[R0,#0]
;000127        MDR_TIMER1->CH3_CNTRL = 0x0E00;  // 13) включение канала 3 Таймера 1 в режиме ШИМ, REF=1 при CCR< CNT< CCR1
	LDR             R1,?lr0021	; 0E00h
	LDR             R0,?lr0022	; 40070028h
	STR             R1,[R0,#0]
;000128        MDR_TIMER1->CH4_CNTRL = 0x0E00;  // 13) включение канала 4 Таймера 1 в режиме ШИМ, REF=1 при CCR< CNT< CCR1
	LDR             R0,?lr0023	; 4007002Ch
	STR             R1,[R0,#0]
;000130        MDR_TIMER1->CH3_CNTRL1 = 0x0001; // 14) начальная инициализация таймера (снятие напряжения- 0x0001)
	MOVS            R1,#1
	LDR             R0,?lr0024	; 40070038h
	STR             R1,[R0,#0]
;000131        MDR_TIMER1->CH4_CNTRL1 = 0x0001; // 14) начальная инициализация таймера (снятие напряжения- 0x0001)
	LDR             R0,?lr0025	; 4007003Ch
	STR             R1,[R0,#0]
;000133        MDR_TIMER1->CH3_CNTRL2 = 0x4;    // 15) разрешение использования CCR1, разрешение обновления CCR и CCR1 в любой момент времени
	MOVS            R1,#4
	LDR             R0,?lr0026	; 40070068h
	STR             R1,[R0,#0]
;000134        MDR_TIMER1->CH4_CNTRL2 = 0x4;    // 15) разрешение использования CCR1, разрешение обновления CCR и CCR1 в любой момент времени
	LDR             R0,?lr0027	; 4007006Ch
	STR             R1,[R0,#0]
;000136        MDR_TIMER1->IE = 0x00000;        // 16) запрет прерываний от Таймера 1
	MOVS            R1,#0
	LDR             R0,?lr0028	; 40070058h
	STR             R1,[R0,#0]
;000137        MDR_TIMER1->DMA_RE = 0x00000;    // 11) запрет запросов на ПДП от Таймера 1
	LDR             R0,?lr0029	; 4007005Ch
	STR             R1,[R0,#0]
;000138        MDR_TIMER1->CNTRL = 0x00000001;  // 16) Разрешить работу таймера
	MOVS            R1,#1
	LDR             R0,?lr0003	; 4007000Ch
	STR             R1,[R0,#0]
;000140        NVIC_EnableIRQ(TIMER1_IRQn); // 14
	MOVS            R0,#14
	BLF             NVIC_EnableIRQ??T
;000141    }
	POP             {R15} 

?lr0003	.DCD	4007000Ch	; used 2 time(s)
?lr0004	.DCD	40070054h	; used 1 time(s)
?lr0005	.DCD	40070004h	; used 1 time(s)
?lr0006	.DCD	40070000h	; used 1 time(s)
?lr0007	.DCD	40070008h	; used 1 time(s)
?lr0008	.DCD	40070014h	; used 1 time(s)
?lr0009	.DCD	40070018h	; used 1 time(s)
?lr0010	.DCD	40070078h	; used 1 time(s)
?lr0011	.DCD	4007001Ch	; used 1 time(s)
?lr0012	.DCD	4007007Ch	; used 1 time(s)
?lr0013	.DCD	8000h	; used 1 time(s)
?lr0014	.DCD	40070020h	; used 1 time(s)
?lr0015	.DCD	40070030h	; used 1 time(s)
?lr0016	.DCD	40070060h	; used 1 time(s)
?lr0017	.DCD	200h	; used 1 time(s)
?lr0018	.DCD	40070024h	; used 1 time(s)
?lr0019	.DCD	40070034h	; used 1 time(s)
?lr0020	.DCD	40070064h	; used 1 time(s)
?lr0021	.DCD	0E00h	; used 1 time(s)
?lr0022	.DCD	40070028h	; used 1 time(s)
?lr0023	.DCD	4007002Ch	; used 1 time(s)
?lr0024	.DCD	40070038h	; used 1 time(s)
?lr0025	.DCD	4007003Ch	; used 1 time(s)
?lr0026	.DCD	40070068h	; used 1 time(s)
?lr0027	.DCD	4007006Ch	; used 1 time(s)
?lr0028	.DCD	40070058h	; used 1 time(s)
?lr0029	.DCD	4007005Ch	; used 1 time(s)

.ENDF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.PUBLIC	Timer2Start, Timer2Start??T
.FUNC	Timer2Start??T	.VOID (.VOID)
Timer2Start	.EQU	Timer2Start??T+1
.FUNCTYPE	.VOID Timer2Start(.VOID)
;000154    void Timer2Start(void)
;000157        MDR_TIMER2->CNTRL = 0x00000000;  // 1) Остановить таймер
	MOVS            R1,#0
	LDR             R0,?lr0030	; 4007800Ch
	STR             R1,[R0,#0]
;000158        MDR_TIMER2->STATUS = 0x00000000; // 2) cбросить запомненные события таймера
	LDR             R0,?lr0031	; 40078054h
	STR             R1,[R0,#0]
;000161        MDR_TIMER2->PSG = 0x002F;        // 3) коэффициент деления 48 для получения тактовой частоты основного счётчика таймера 1 МГц
	MOVS            R1,#47
	LDR             R0,?lr0032	; 40078004h
	STR             R1,[R0,#0]
;000162        MDR_TIMER2->CNT = 0x00000000;    // 4) Начальное значение счетчика
	MOVS            R1,#0
	LDR             R0,?lr0033	; 40078000h
	STR             R1,[R0,#0]
;000163        MDR_TIMER2->ARR = 0xFFFFFFF0;    // 5) Основание счета
	MOVS            R1,#15
	MVNS            R1,R1
	LDR             R0,?lr0034	; 40078008h
	STR             R1,[R0,#0]
;000166        MDR_TIMER2->CCR1  = 0xFFFFFFFF;
	MOVS            R1,#0
	MVNS            R1,R1
	LDR             R0,?lr0035	; 40078010h
	STR             R1,[R0,#0]
;000167        MDR_TIMER2->CCR11 = 0xFFFFFFFF;
	LDR             R0,?lr0036	; 40078070h
	STR             R1,[R0,#0]
;000169        MDR_TIMER2->CCR2  = 0xFFFFFFFF;
	LDR             R0,?lr0037	; 40078014h
	STR             R1,[R0,#0]
;000170        MDR_TIMER2->CCR21 = 0xFFFFFFFF;
	LDR             R0,?lr0038	; 40078074h
	STR             R1,[R0,#0]
;000172        MDR_TIMER2->CCR3  = 0xFFFFFFFF;
	LDR             R0,?lr0039	; 40078018h
	STR             R1,[R0,#0]
;000173        MDR_TIMER2->CCR31 = 0xFFFFFFFF;
	LDR             R0,?lr0040	; 40078078h
	STR             R1,[R0,#0]
;000175        MDR_TIMER2->CCR4  = 0xFFFFFFFF;
	LDR             R0,?lr0041	; 4007801Ch
	STR             R1,[R0,#0]
;000176        MDR_TIMER2->CCR41 = 0xFFFFFFFF;
	LDR             R0,?lr0042	; 4007807Ch
	STR             R1,[R0,#0]
;000179        MDR_TIMER2->CH1_CNTRL = 0x0E00;
	LDR             R1,?lr0043	; 0E00h
	LDR             R0,?lr0044	; 40078020h
	STR             R1,[R0,#0]
;000180        MDR_TIMER2->CH2_CNTRL = 0x0E00;
	LDR             R0,?lr0045	; 40078024h
	STR             R1,[R0,#0]
;000181        MDR_TIMER2->CH3_CNTRL = 0x0E00;
	LDR             R0,?lr0046	; 40078028h
	STR             R1,[R0,#0]
;000182        MDR_TIMER2->CH4_CNTRL = 0x0E00;
	LDR             R0,?lr0047	; 4007802Ch
	STR             R1,[R0,#0]
;000185        MDR_TIMER2->CH1_CNTRL1 = 0x0005;
	MOVS            R1,#5
	LDR             R0,?lr0048	; 40078030h
	STR             R1,[R0,#0]
;000186        MDR_TIMER2->CH2_CNTRL1 = 0x0005;
	LDR             R0,?lr0049	; 40078034h
	STR             R1,[R0,#0]
;000187        MDR_TIMER2->CH3_CNTRL1 = 0x0005;
	LDR             R0,?lr0050	; 40078038h
	STR             R1,[R0,#0]
;000188        MDR_TIMER2->CH4_CNTRL1 = 0x0005;
	LDR             R0,?lr0051	; 4007803Ch
	STR             R1,[R0,#0]
;000191        MDR_TIMER2->CH1_CNTRL2 = 0x4;
	MOVS            R1,#4
	LDR             R0,?lr0052	; 40078060h
	STR             R1,[R0,#0]
;000192        MDR_TIMER2->CH2_CNTRL2 = 0x4;
	LDR             R0,?lr0053	; 40078064h
	STR             R1,[R0,#0]
;000193        MDR_TIMER2->CH3_CNTRL2 = 0x4;
	LDR             R0,?lr0054	; 40078068h
	STR             R1,[R0,#0]
;000194        MDR_TIMER2->CH4_CNTRL2 = 0x4;
	LDR             R0,?lr0055	; 4007806Ch
	STR             R1,[R0,#0]
;000196        MDR_TIMER2->IE = 0x00000000;     // 10) запрет всех прерываний таймера 2
	MOVS            R1,#0
	LDR             R0,?lr0056	; 40078058h
	STR             R1,[R0,#0]
;000197        MDR_TIMER2->DMA_RE = 0x00000;    // 11) запрет запросов на ПДП от Таймера 2
	LDR             R0,?lr0057	; 4007805Ch
	STR             R1,[R0,#0]
;000202    }
	BX              R14

?lr0030	.DCD	4007800Ch	; used 1 time(s)
?lr0031	.DCD	40078054h	; used 1 time(s)
?lr0032	.DCD	40078004h	; used 1 time(s)
?lr0033	.DCD	40078000h	; used 1 time(s)
?lr0034	.DCD	40078008h	; used 1 time(s)
?lr0035	.DCD	40078010h	; used 1 time(s)
?lr0036	.DCD	40078070h	; used 1 time(s)
?lr0037	.DCD	40078014h	; used 1 time(s)
?lr0038	.DCD	40078074h	; used 1 time(s)
?lr0039	.DCD	40078018h	; used 1 time(s)
?lr0040	.DCD	40078078h	; used 1 time(s)
?lr0041	.DCD	4007801Ch	; used 1 time(s)
?lr0042	.DCD	4007807Ch	; used 1 time(s)
?lr0043	.DCD	0E00h	; used 1 time(s)
?lr0044	.DCD	40078020h	; used 1 time(s)
?lr0045	.DCD	40078024h	; used 1 time(s)
?lr0046	.DCD	40078028h	; used 1 time(s)
?lr0047	.DCD	4007802Ch	; used 1 time(s)
?lr0048	.DCD	40078030h	; used 1 time(s)
?lr0049	.DCD	40078034h	; used 1 time(s)
?lr0050	.DCD	40078038h	; used 1 time(s)
?lr0051	.DCD	4007803Ch	; used 1 time(s)
?lr0052	.DCD	40078060h	; used 1 time(s)
?lr0053	.DCD	40078064h	; used 1 time(s)
?lr0054	.DCD	40078068h	; used 1 time(s)
?lr0055	.DCD	4007806Ch	; used 1 time(s)
?lr0056	.DCD	40078058h	; used 1 time(s)
?lr0057	.DCD	4007805Ch	; used 1 time(s)

.ENDF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.PUBLIC	Timer2Select, Timer2Select??T
.FUNC	Timer2Select??T	.VOID (.NOCHECK)
Timer2Select	.EQU	Timer2Select??T+1
.FUNCTYPE	.VOID Timer2Select(.NOCHECK)
;000208    void Timer2Select(E_PWM_LOAD_MODE Select)

Select?Timer2Select	.EQU	R0

;000210       switch (Select) {
	CMP             Select?Timer2Select,#1
	BEQ             ??_2_CASE_1
	CMP             Select?Timer2Select,#2
	BEQ             ??_2_CASE_2
	CMP             Select?Timer2Select,#0
	BNE             ??_2_BREAK
;000211          case EPLM_SWITCH_OFF: {
;000214             MDR_TIMER2->CH1_CNTRL1 = 0x0005;
	MOVS            R1,#5
	LDR             R0,?lr0058	; 40078030h
	STR             R1,[R0,#0]
;000215             MDR_TIMER2->CH2_CNTRL1 = 0x0005;
	LDR             R0,?lr0059	; 40078034h
	STR             R1,[R0,#0]
;000216             MDR_TIMER2->CH3_CNTRL1 = 0x0005;
	LDR             R0,?lr0060	; 40078038h
	STR             R1,[R0,#0]
;000217             MDR_TIMER2->CH4_CNTRL1 = 0x0005;
	LDR             R0,?lr0061	; 4007803Ch
	STR             R1,[R0,#0]
;000218             break;
	BX              R14
;000219          }
??_2_CASE_1:
;000221          case EPLM_WIRE_INTEGRITY_CHECK: {
;000224             MDR_TIMER2->CH1_CNTRL1 = 0x0001;
	MOVS            R1,#1
	LDR             R0,?lr0058	; 40078030h
	STR             R1,[R0,#0]
;000225             MDR_TIMER2->CH2_CNTRL1 = 0x0001;
	LDR             R0,?lr0059	; 40078034h
	STR             R1,[R0,#0]
;000226             MDR_TIMER2->CH3_CNTRL1 = 0x0001;
	LDR             R0,?lr0060	; 40078038h
	STR             R1,[R0,#0]
;000227             MDR_TIMER2->CH4_CNTRL1 = 0x0001;
	LDR             R0,?lr0061	; 4007803Ch
	STR             R1,[R0,#0]
;000228             break;
	BX              R14
;000229          }
??_2_CASE_2:
;000231          case EPLM_NORMAL_OPERATION: {
;000234             MDR_TIMER2->CH1_CNTRL1 = 0x0019;
	MOVS            R1,#25
	LDR             R0,?lr0058	; 40078030h
	STR             R1,[R0,#0]
;000235             MDR_TIMER2->CH2_CNTRL1 = 0x0019;
	LDR             R0,?lr0059	; 40078034h
	STR             R1,[R0,#0]
;000236             MDR_TIMER2->CH3_CNTRL1 = 0x0019;
	LDR             R0,?lr0060	; 40078038h
	STR             R1,[R0,#0]
;000237             MDR_TIMER2->CH4_CNTRL1 = 0x0019;
	LDR             R0,?lr0061	; 4007803Ch
	STR             R1,[R0,#0]
;000238            break;
;000239          }
;000240       }
??_2_BREAK:
;000241    }
	BX              R14

?lr0058	.DCD	40078030h	; used 3 time(s)
?lr0059	.DCD	40078034h	; used 3 time(s)
?lr0060	.DCD	40078038h	; used 3 time(s)
?lr0061	.DCD	4007803Ch	; used 3 time(s)

.ENDF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.PUBLIC	Timer4Start, Timer4Start??T
.FUNC	Timer4Start??T	.VOID (.VOID)
Timer4Start	.EQU	Timer4Start??T+1
.FUNCTYPE	.VOID Timer4Start(.VOID)
;000252    void Timer4Start(void)
	PUSH            {R14} 
;000255        MDR_TIMER4->CNTRL = 0x00000000;  // 1) Остановить таймер
	MOVS            R1,#0
	LDR             R0,?lr0062	; 4009800Ch
	STR             R1,[R0,#0]
;000258        MDR_TIMER4->PSG = 0x002F;        // 2) Предделитель частоты =48 (1 МГц);
	MOVS            R1,#47
	LDR             R0,?lr0063	; 40098004h
	STR             R1,[R0,#0]
;000259        MDR_TIMER4->CNT = 0x00000002;    // 3) Начальное значение счетчика (чтобы таймер начал счёт не с "00" и при начале счёта не установился флаг "CNT ZERO EVENT")
	MOVS            R1,#2
	LDR             R0,?lr0064	; 40098000h
	STR             R1,[R0,#0]
;000260        MDR_TIMER4->ARR = 0x00001FF;     // 4) Основание счета (512 отсчётов по 1 мкс = 512 мкс, что соответствует частоте питания датчика ЛДТ-1716 в 1,95 кГц)
	LDR             R1,?lr0065	; 1FFh
	LDR             R0,?lr0066	; 40098008h
	STR             R1,[R0,#0]
;000263        MDR_TIMER4->CH1_CNTRL = 0x0E00;
	LDR             R1,?lr0067	; 0E00h
	LDR             R0,?lr0068	; 40098020h
	STR             R1,[R0,#0]
;000264        MDR_TIMER4->CH2_CNTRL = 0x0E00;
	LDR             R0,?lr0069	; 40098024h
	STR             R1,[R0,#0]
;000265        MDR_TIMER4->CH3_CNTRL = 0x0E00;
	LDR             R0,?lr0070	; 40098028h
	STR             R1,[R0,#0]
;000266        MDR_TIMER4->CH4_CNTRL = 0x0E00;
	LDR             R0,?lr0071	; 4009802Ch
	STR             R1,[R0,#0]
;000269        MDR_TIMER4->CH1_CNTRL1 = 0x0009;
	MOVS            R1,#9
	LDR             R0,?lr0072	; 40098030h
	STR             R1,[R0,#0]
;000270        MDR_TIMER4->CH2_CNTRL1 = 0x0009;
	LDR             R0,?lr0073	; 40098034h
	STR             R1,[R0,#0]
;000271        MDR_TIMER4->CH3_CNTRL1 = 0x0009;
	LDR             R0,?lr0074	; 40098038h
	STR             R1,[R0,#0]
;000272        MDR_TIMER4->CH4_CNTRL1 = 0x0009;
	LDR             R0,?lr0075	; 4009803Ch
	STR             R1,[R0,#0]
;000275        MDR_TIMER4->CH1_CNTRL2 = 0xC;
	MOVS            R1,#12
	LDR             R0,?lr0076	; 40098060h
	STR             R1,[R0,#0]
;000276        MDR_TIMER4->CH2_CNTRL2 = 0xC;
	LDR             R0,?lr0077	; 40098064h
	STR             R1,[R0,#0]
;000277        MDR_TIMER4->CH3_CNTRL2 = 0xC;
	LDR             R0,?lr0078	; 40098068h
	STR             R1,[R0,#0]
;000279        MDR_TIMER4->CH4_CNTRL2 = 0x0;
	MOVS            R1,#0
	LDR             R0,?lr0079	; 4009806Ch
	STR             R1,[R0,#0]
;000281        MDR_TIMER4->CCR1  = 0x00000040;  //  9) точка  64 мкс
	MOVS            R1,#64
	LDR             R0,?lr0080	; 40098010h
	STR             R1,[R0,#0]
;000282        MDR_TIMER4->CCR2  = 0x00000080;  // 10) точка 128 мкс
	MOVS            R1,#80h
	LDR             R0,?lr0081	; 40098014h
	STR             R1,[R0,#0]
;000283        MDR_TIMER4->CCR3  = 0x000000C0;  // 11) точка 192 мкс
	MOVS            R1,#0C0h
	LDR             R0,?lr0082	; 40098018h
	STR             R1,[R0,#0]
;000284        MDR_TIMER4->CCR11 = 0x00000140;  // 12) точка 320 мкс
	LDR             R1,?lr0083	; 140h
	LDR             R0,?lr0084	; 40098070h
	STR             R1,[R0,#0]
;000285        MDR_TIMER4->CCR21 = 0x00000180;  // 13) точка 384 мкс
	LDR             R1,?lr0085	; 180h
	LDR             R0,?lr0086	; 40098074h
	STR             R1,[R0,#0]
;000286        MDR_TIMER4->CCR31 = 0x000001C0;  // 14) точка 448 мкс
	LDR             R1,?lr0087	; 1C0h
	LDR             R0,?lr0088	; 40098078h
	STR             R1,[R0,#0]
;000288        MDR_TIMER4->CCR4 = 0x00000000;   // 16) точка 0 мкс соответствующая началу первого цикла 128 мкс в пределах метки 4 мс
	MOVS            R1,#0
	LDR             R0,?lr0089	; 4009801Ch
	STR             R1,[R0,#0]
;000290        MDR_TIMER4->IE = 0x00001001;     // 17) разрешение прерываний таймера 4 по обнаружению переднего фронта REF канала 4 и при CNT=0
	LDR             R1,?lr0090	; 1001h
	LDR             R0,?lr0091	; 40098058h
	STR             R1,[R0,#0]
;000291        MDR_TIMER4->CNTRL = 0x0001;      // 18) Разрешить работу таймера
	MOVS            R1,#1
	LDR             R0,?lr0062	; 4009800Ch
	STR             R1,[R0,#0]
;000293        MDR_TIMER4->STATUS = 0x00000000; // 19) сбросить запомненные события таймера
	MOVS            R1,#0
	LDR             R0,?lr0092	; 40098054h
	STR             R1,[R0,#0]
;000295        NVIC_EnableIRQ(TIMER4_IRQn);     // 1.2.2.2 Инициализировать контроллер прерываний.
	MOVS            R0,#13
	BLF             NVIC_EnableIRQ??T
;000296    }
	POP             {R15} 

.ALIGN	2
?lr0062	.DCD	4009800Ch	; used 2 time(s)
?lr0063	.DCD	40098004h	; used 1 time(s)
?lr0064	.DCD	40098000h	; used 1 time(s)
?lr0065	.DCD	1FFh	; used 1 time(s)
?lr0066	.DCD	40098008h	; used 1 time(s)
?lr0067	.DCD	0E00h	; used 1 time(s)
?lr0068	.DCD	40098020h	; used 1 time(s)
?lr0069	.DCD	40098024h	; used 1 time(s)
?lr0070	.DCD	40098028h	; used 1 time(s)
?lr0071	.DCD	4009802Ch	; used 1 time(s)
?lr0072	.DCD	40098030h	; used 1 time(s)
?lr0073	.DCD	40098034h	; used 1 time(s)
?lr0074	.DCD	40098038h	; used 1 time(s)
?lr0075	.DCD	4009803Ch	; used 1 time(s)
?lr0076	.DCD	40098060h	; used 1 time(s)
?lr0077	.DCD	40098064h	; used 1 time(s)
?lr0078	.DCD	40098068h	; used 1 time(s)
?lr0079	.DCD	4009806Ch	; used 1 time(s)
?lr0080	.DCD	40098010h	; used 1 time(s)
?lr0081	.DCD	40098014h	; used 1 time(s)
?lr0082	.DCD	40098018h	; used 1 time(s)
?lr0083	.DCD	140h	; used 1 time(s)
?lr0084	.DCD	40098070h	; used 1 time(s)
?lr0085	.DCD	180h	; used 1 time(s)
?lr0086	.DCD	40098074h	; used 1 time(s)
?lr0087	.DCD	1C0h	; used 1 time(s)
?lr0088	.DCD	40098078h	; used 1 time(s)
?lr0089	.DCD	4009801Ch	; used 1 time(s)
?lr0090	.DCD	1001h	; used 1 time(s)
?lr0091	.DCD	40098058h	; used 1 time(s)
?lr0092	.DCD	40098054h	; used 1 time(s)

.ENDF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.PUBLIC	Timer2_IRQHandler, Timer2_IRQHandler??T
.FUNC	Timer2_IRQHandler??T	.VOID (.VOID)
Timer2_IRQHandler	.EQU	Timer2_IRQHandler??T+1
.FUNCTYPE	.VOID Timer2_IRQHandler(.VOID)
;000315    void Timer2_IRQHandler(void) {
;000316        MDR_TIMER2->STATUS&=~1;
	LDR             R0,?lr0093	; 40078054h
	LDR             R0,[R0,#0]
	MOVS            R1,#1
	MVNS            R1,R1
	ANDS            R0,R1
	LDR             R1,?lr0093	; 40078054h
	STR             R0,[R1,#0]
;000318        TC_Timer2++;
	LDR             R0,?lr0094	; TC_Timer2
	LDR             R0,[R0,#0]
	ADDS            R0,R0,#1
	LDR             R1,?lr0094	; TC_Timer2
	STR             R0,[R1,#0]
;000319    }
	BX              R14

.ALIGN	2
?lr0093	.DCD	40078054h	; used 2 time(s)
?lr0094	.DCD	TC_Timer2	; used 2 time(s)

.ENDF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.PUBLIC	Timer3_IRQHandler, Timer3_IRQHandler??T
.FUNC	Timer3_IRQHandler??T	.VOID (.VOID)
Timer3_IRQHandler	.EQU	Timer3_IRQHandler??T+1
.FUNCTYPE	.VOID Timer3_IRQHandler(.VOID)
;000326    void Timer3_IRQHandler(void) {
;000327        MDR_TIMER3->STATUS&=~1;
	LDR             R0,?lr0095	; 40080054h
	LDR             R0,[R0,#0]
	MOVS            R1,#1
	MVNS            R1,R1
	ANDS            R0,R1
	LDR             R1,?lr0095	; 40080054h
	STR             R0,[R1,#0]
;000329        TC_Timer3++;
	LDR             R0,?lr0096	; TC_Timer3
	LDR             R0,[R0,#0]
	ADDS            R0,R0,#1
	LDR             R1,?lr0096	; TC_Timer3
	STR             R0,[R1,#0]
;000330    }
	BX              R14

.ALIGN	2
?lr0095	.DCD	40080054h	; used 2 time(s)
?lr0096	.DCD	TC_Timer3	; used 2 time(s)

.ENDF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.PUBLIC	Timer4_IRQHandler, Timer4_IRQHandler??T
.FUNC	Timer4_IRQHandler??T	.VOID (.VOID)
Timer4_IRQHandler	.EQU	Timer4_IRQHandler??T+1
.FUNCTYPE	.VOID Timer4_IRQHandler(.VOID)
;000335    void Timer4_IRQHandler(void)
;000338        MDR_TIMER4->STATUS&=~1;
	LDR             R0,?lr0097	; 40098054h
	LDR             R0,[R0,#0]
	MOVS            R1,#1
	MVNS            R1,R1
	ANDS            R0,R1
	LDR             R1,?lr0097	; 40098054h
	STR             R0,[R1,#0]
;000340        M128Mark = 1;
	MOVS            R1,#1
	LDR             R0,?lr0098	; M128Mark
	STR             R1,[R0,#0]
;000342        TC_Timer4++;
	LDR             R0,?lr0099	; TC_Timer4
	LDR             R0,[R0,#0]
	ADDS            R0,R0,#1
	LDR             R1,?lr0099	; TC_Timer4
	STR             R0,[R1,#0]
;000343    }
	BX              R14

?lr0097	.DCD	40098054h	; used 2 time(s)
?lr0098	.DCD	M128Mark	; used 1 time(s)
?lr0099	.DCD	TC_Timer4	; used 2 time(s)

.ENDF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.RSEG	??DATA_SEGMENT_ADDRESSES,code
	.DCD	.SFB UDATA__TIMERDRIVER, .SFE UDATA__TIMERDRIVER

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.EXTRN(code) ?start
.TYPE ?start(.NOCHECK)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	.END
