;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                           ;;
;;                ARM C CROSS COMPILER Version 1.03.130923 Demo              ;;
;;                     Copyright (C) 2009 Phyton, Inc.                       ;;
;;                                                                           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                           ;;
;; ASSEMBLY SOURCE FILE FOR: MilandrPortDefinition.c                         ;;
;; TARGET: Cortex-M0/M1                                                      ;;
;; OPTIMIZATION LEVEL: 0                                                     ;;
;; FULL COMMAND LINE:                                                        ;;
;;  -CM1 -t -s -l -d -p -g -Op -E10 -W50 -Z0 -Q43 -IC:\Program Files (x86)\P ;;
;;  hyton CodeMaster-ARM Demo\2_40_00\CMC-ARM\Inc;C:\Users\ivanov-ga\Desktop ;;
;;  \uartled\INCLUDE                                                         ;;
;;                                                                           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	.PMODULE MILANDRPORTDEFINITION

.RSEG	FUN_CODE__MILANDRPORTDEFINITION,code

.PUBLIC	assemblePorts, assemblePorts??T
.THUMB
.FUNC	assemblePorts??T	.VOID (.VOID)
assemblePorts	.EQU	assemblePorts??T+1
.FUNCTYPE	.VOID assemblePorts(.VOID)
;FILE: MilandrPortDefinition.c
;000483    void assemblePorts()
;000704                    MDR_PORTC->OE     = PORT_C_OE;
	MOVS            R1,#11
	LDR             R0,?lr0000	; 400B8004h
	STR             R1,[R0,#0]
;000705                    MDR_PORTC->FUNC   = PORT_C_FUNC;
	LDR             R1,?lr0001	; 54000140h
	LDR             R0,?lr0002	; 400B8008h
	STR             R1,[R0,#0]
;000706                    MDR_PORTC->ANALOG = PORT_C_AD;
	LDR             R1,?lr0003	; 0FFFFh
	LDR             R0,?lr0004	; 400B800Ch
	STR             R1,[R0,#0]
;000707                    MDR_PORTC->PULL   = PORT_C_PULL;
	LDR             R1,?lr0005	; 6000h
	LDR             R0,?lr0006	; 400B8010h
	STR             R1,[R0,#0]
;000708                    MDR_PORTC->PD     = PORT_C_PD;
	LDR             R1,?lr0007	; 0C000h
	LDR             R0,?lr0008	; 400B8014h
	STR             R1,[R0,#0]
;000709                    MDR_PORTC->PWR    = PORT_C_PWR;
	LDR             R1,?lr0009	; 0FC0003CFh
	LDR             R0,?lr0010	; 400B8018h
	STR             R1,[R0,#0]
;000710                    MDR_PORTC->GFEN   = PORT_C_GFEN;
	MOVS            R1,#0
	LDR             R0,?lr0011	; 400B801Ch
	STR             R1,[R0,#0]
;000719                    MDR_PORTD->OE     = PORT_D_OE;
	LDR             R1,?lr0012	; 7FFEh
	LDR             R0,?lr0013	; 400C0004h
	STR             R1,[R0,#0]
;000720                    MDR_PORTD->FUNC   = PORT_D_FUNC;
	LDR             R1,?lr0014	; 1555h
	LDR             R0,?lr0015	; 400C0008h
	STR             R1,[R0,#0]
;000721                    MDR_PORTD->ANALOG = PORT_D_AD;
	LDR             R1,?lr0003	; 0FFFFh
	LDR             R0,?lr0016	; 400C000Ch
	STR             R1,[R0,#0]
;000722                    MDR_PORTD->PULL   = PORT_D_PULL;
	MOVS            R1,#0
	LDR             R0,?lr0017	; 400C0010h
	STR             R1,[R0,#0]
;000723                    MDR_PORTD->PD     = PORT_D_PD;
	LDR             R0,?lr0018	; 400C0014h
	STR             R1,[R0,#0]
;000724                    MDR_PORTD->PWR    = PORT_D_PWR;
	LDR             R1,?lr0019	; 3FFFFFFFh
	LDR             R0,?lr0020	; 400C0018h
	STR             R1,[R0,#0]
;000725                    MDR_PORTD->GFEN   = PORT_D_GFEN;
	MOVS            R1,#0
	LDR             R0,?lr0021	; 400C001Ch
	STR             R1,[R0,#0]
;000735                    MDR_PORTE->OE     = PORT_E_OE;
	LDR             R0,?lr0022	; 400C8004h
	STR             R1,[R0,#0]
;000736                    MDR_PORTE->FUNC   = PORT_E_FUNC;
	LDR             R0,?lr0023	; 400C8008h
	STR             R1,[R0,#0]
;000737                    MDR_PORTE->ANALOG = PORT_E_AD;
	LDR             R1,?lr0003	; 0FFFFh
	LDR             R0,?lr0024	; 400C800Ch
	STR             R1,[R0,#0]
;000738                    MDR_PORTE->PULL   = PORT_E_PULL;
	MOVS            R1,#0
	LDR             R0,?lr0025	; 400C8010h
	STR             R1,[R0,#0]
;000739                    MDR_PORTE->PD     = PORT_E_PD;
	LDR             R0,?lr0026	; 400C8014h
	STR             R1,[R0,#0]
;000740                    MDR_PORTE->PWR    = PORT_E_PWR;
	LDR             R1,?lr0027	; 0C0FF0C00h
	LDR             R0,?lr0028	; 400C8018h
	STR             R1,[R0,#0]
;000741                    MDR_PORTE->GFEN   = PORT_E_GFEN;
	MOVS            R1,#0
	LDR             R0,?lr0029	; 400C801Ch
	STR             R1,[R0,#0]
;000751                    MDR_PORTF->OE     = PORT_F_OE;
	LDR             R1,?lr0030	; 1F80h
	LDR             R0,?lr0031	; 400E8004h
	STR             R1,[R0,#0]
;000752                    MDR_PORTF->FUNC   = PORT_F_FUNC;
	LDR             R1,?lr0032	; 1555540h
	LDR             R0,?lr0033	; 400E8008h
	STR             R1,[R0,#0]
;000753                    MDR_PORTF->ANALOG = PORT_F_AD;
	LDR             R1,?lr0003	; 0FFFFh
	LDR             R0,?lr0034	; 400E800Ch
	STR             R1,[R0,#0]
;000754                    MDR_PORTF->PULL   = PORT_F_PULL;
	MOVS            R1,#24
	LDR             R0,?lr0035	; 400E8010h
	STR             R1,[R0,#0]
;000755                    MDR_PORTF->PD     = PORT_F_PD;
	MOVS            R1,#48
	LDR             R0,?lr0036	; 400E8014h
	STR             R1,[R0,#0]
;000756                    MDR_PORTF->PWR    = PORT_F_PWR;
	LDR             R1,?lr0037	; 3FFFFC0h
	LDR             R0,?lr0038	; 400E8018h
	STR             R1,[R0,#0]
;000757                    MDR_PORTF->GFEN   = PORT_F_GFEN;
	MOVS            R1,#0
	LDR             R0,?lr0039	; 400E801Ch
	STR             R1,[R0,#0]
;000765    }
	BX              R14

.ALIGN	2
?lr0000	.DCD	400B8004h	; used 1 time(s)
?lr0001	.DCD	54000140h	; used 1 time(s)
?lr0002	.DCD	400B8008h	; used 1 time(s)
?lr0003	.DCD	0FFFFh	; used 4 time(s)
?lr0004	.DCD	400B800Ch	; used 1 time(s)
?lr0005	.DCD	6000h	; used 1 time(s)
?lr0006	.DCD	400B8010h	; used 1 time(s)
?lr0007	.DCD	0C000h	; used 1 time(s)
?lr0008	.DCD	400B8014h	; used 1 time(s)
?lr0009	.DCD	0FC0003CFh	; used 1 time(s)
?lr0010	.DCD	400B8018h	; used 1 time(s)
?lr0011	.DCD	400B801Ch	; used 1 time(s)
?lr0012	.DCD	7FFEh	; used 1 time(s)
?lr0013	.DCD	400C0004h	; used 1 time(s)
?lr0014	.DCD	1555h	; used 1 time(s)
?lr0015	.DCD	400C0008h	; used 1 time(s)
?lr0016	.DCD	400C000Ch	; used 1 time(s)
?lr0017	.DCD	400C0010h	; used 1 time(s)
?lr0018	.DCD	400C0014h	; used 1 time(s)
?lr0019	.DCD	3FFFFFFFh	; used 1 time(s)
?lr0020	.DCD	400C0018h	; used 1 time(s)
?lr0021	.DCD	400C001Ch	; used 1 time(s)
?lr0022	.DCD	400C8004h	; used 1 time(s)
?lr0023	.DCD	400C8008h	; used 1 time(s)
?lr0024	.DCD	400C800Ch	; used 1 time(s)
?lr0025	.DCD	400C8010h	; used 1 time(s)
?lr0026	.DCD	400C8014h	; used 1 time(s)
?lr0027	.DCD	0C0FF0C00h	; used 1 time(s)
?lr0028	.DCD	400C8018h	; used 1 time(s)
?lr0029	.DCD	400C801Ch	; used 1 time(s)
?lr0030	.DCD	1F80h	; used 1 time(s)
?lr0031	.DCD	400E8004h	; used 1 time(s)
?lr0032	.DCD	1555540h	; used 1 time(s)
?lr0033	.DCD	400E8008h	; used 1 time(s)
?lr0034	.DCD	400E800Ch	; used 1 time(s)
?lr0035	.DCD	400E8010h	; used 1 time(s)
?lr0036	.DCD	400E8014h	; used 1 time(s)
?lr0037	.DCD	3FFFFC0h	; used 1 time(s)
?lr0038	.DCD	400E8018h	; used 1 time(s)
?lr0039	.DCD	400E801Ch	; used 1 time(s)

.ENDF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.EXTRN(code) ?start
.TYPE ?start(.NOCHECK)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	.END
